 - name: Checkout code
        uses: actions/checkout@v3

      # 2. Set up Docker
      # 2. Docker login
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      # 3. Set up Docker Buildx
      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      # 3. Build Docker Image
      # 4. Build and push Docker Image
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_USERNAME }}/game-hub:${{ github.sha }}
            ${{ secrets.DOCKER_USERNAME }}/game-hub:${{ github.ref_name }}
            ${{ secrets.DOCKER_USERNAME }}/game-hub:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/game-hub:cache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/game-hub:cache,mode=max

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # 1. Set up Kubectl
      - name: Set up Kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.28.0'

      # 2. Set up Helm
      - name: Set up Helm
        run: curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

      # 3. Configure Kubernetes context
      - name: Configure Kubernetes
        run: |
          echo "${{ secrets.KUBECONFIG }}" > kubeconfig.yaml
          export KUBECONFIG=kubeconfig.yaml
      # 4. Deploy with Helm
      - name: Deploy with Helm
        run: helm upgrade --install game-hub ./my-game-hub --set image.repository=${{ secrets.DOCKER_USERNAME }}/game-hub,image.tag=${{ github.sha }}